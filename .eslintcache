[{"/Users/sgguruda/work/git_codebase/OpenSearch-Dashboards/plugins/dashboards-query-workbench/common/utils/async_query_helpers.ts":"1","/Users/sgguruda/work/git_codebase/OpenSearch-Dashboards/plugins/dashboards-query-workbench/public/components/Main/main.tsx":"2","/Users/sgguruda/work/git_codebase/OpenSearch-Dashboards/plugins/dashboards-query-workbench/public/components/SQLPage/table_view.tsx":"3","/Users/sgguruda/work/git_codebase/OpenSearch-Dashboards/plugins/dashboards-query-workbench/public/components/acceleration/selectors/source_selector.tsx":"4","/Users/sgguruda/work/git_codebase/OpenSearch-Dashboards/plugins/dashboards-query-workbench/public/components/acceleration/selectors/index_type_selector.tsx":"5"},{"size":2136,"mtime":1705691416776,"results":"6","hashOfConfig":"7"},{"size":34577,"mtime":1705687177183,"results":"8","hashOfConfig":"7"},{"size":22450,"mtime":1705690412560,"results":"9","hashOfConfig":"7"},{"size":8949,"mtime":1705684750140,"results":"10","hashOfConfig":"7"},{"size":3965,"mtime":1705691017700,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7jsvoz",{"filePath":"14","messages":"15","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":8,"warningCount":8,"fixableErrorCount":8,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sgguruda/work/git_codebase/OpenSearch-Dashboards/plugins/dashboards-query-workbench/common/utils/async_query_helpers.ts",[],"/Users/sgguruda/work/git_codebase/OpenSearch-Dashboards/plugins/dashboards-query-workbench/public/components/Main/main.tsx",["23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43"],"/Users/sgguruda/work/git_codebase/OpenSearch-Dashboards/plugins/dashboards-query-workbench/public/components/SQLPage/table_view.tsx",["44","45"],"/Users/sgguruda/work/git_codebase/OpenSearch-Dashboards/plugins/dashboards-query-workbench/public/components/acceleration/selectors/source_selector.tsx",["46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61"],"/*\n * Copyright OpenSearch Contributors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { EuiComboBox, EuiComboBoxOptionOption, EuiFormRow, EuiSpacer, EuiText } from '@elastic/eui';\nimport producer from 'immer';\nimport React, { useEffect, useState } from 'react';\nimport { CoreStart } from '../../../../../../src/core/public';\nimport { useToast } from '../../../../common/toast';\nimport { CreateAccelerationForm } from '../../../../common/types';\nimport { getJobId, pollQueryStatus } from '../../../../common/utils/async_query_helpers';\nimport { hasError, validateDataSource } from '../create/utils';\n\ninterface AccelerationDataSourceSelectorProps {\n  http: CoreStart['http'];\n  accelerationFormData: CreateAccelerationForm;\n  setAccelerationFormData: React.Dispatch<React.SetStateAction<CreateAccelerationForm>>;\n  selectedDatasource: EuiComboBoxOptionOption[];\n}\n\nexport const AccelerationDataSourceSelector = ({\n  http,\n  accelerationFormData,\n  setAccelerationFormData,\n  selectedDatasource,\n}: AccelerationDataSourceSelectorProps) => {\n  const { setToast } = useToast();\n  const [dataConnections, setDataConnections] = useState<EuiComboBoxOptionOption<string>[]>([]);\n  const [selectedDataConnection, setSelectedDataConnection] = useState<\n    EuiComboBoxOptionOption<string>[]\n  >(selectedDatasource.length > 0 ? [{ label: selectedDatasource[0].label }] : []);\n  const [databases, setDatabases] = useState<EuiComboBoxOptionOption<string>[]>([]);\n  const [selectedDatabase, setSelectedDatabase] = useState<EuiComboBoxOptionOption<string>[]>([]);\n  const [tables, setTables] = useState<EuiComboBoxOptionOption<string>[]>([]);\n  const [selectedTable, setSelectedTable] = useState<EuiComboBoxOptionOption<string>[]>([]);\n  const [loadingComboBoxes, setLoadingComboBoxes] = useState({\n    dataSource: false,\n    database: false,\n    dataTable: false,\n  });\n\n  const loadDataSource = () => {\n    setLoadingComboBoxes({ ...loadingComboBoxes, dataSource: true });\n    http\n      .get(`/api/get_datasources`)\n      .then((res) => {\n        const data = res.data.resp;\n        setDataConnections(\n          data\n            .filter((connection: any) => connection.connector.toUpperCase() === 'S3GLUE')\n            .map((connection: any) => ({ label: connection.name }))\n        );\n      })\n      .catch((err) => {\n        console.error(err);\n        setToast(`ERROR: failed to load datasources`, 'danger');\n      });\n    setLoadingComboBoxes({ ...loadingComboBoxes, dataSource: false });\n  };\n\n  const loadDatabases = () => {\n    setLoadingComboBoxes({ ...loadingComboBoxes, database: true });\n    const query = {\n      lang: 'sql',\n      query: `SHOW SCHEMAS IN ${accelerationFormData.dataSource}`,\n      datasource: accelerationFormData.dataSource,\n    };\n    const errorMessage = `ERROR: failed to load databases`;\n    getJobId(selectedDataConnection[0].label, query, http, (id: string) => {\n      if (id === undefined) {\n        setToast(errorMessage, 'danger');\n      } else {\n        pollQueryStatus(id, http, (data: { status: string; results: any[] }) => {\n          if (data.status === 'SUCCESS') {\n            let databaseOptions: EuiComboBoxOptionOption<string>[] = [];\n            if (data.results.length > 0)\n              databaseOptions = data.results.map((subArray: any[]) => ({ label: subArray[0] }));\n            setDatabases(databaseOptions);\n            setLoadingComboBoxes({ ...loadingComboBoxes, database: false });\n          }\n          if (data.status === 'FAILED') {\n            setLoadingComboBoxes({ ...loadingComboBoxes, database: false });\n            setToast(errorMessage, 'danger');\n          }\n        });\n      }\n    });\n  };\n\n  const loadTables = () => {\n    setLoadingComboBoxes({ ...loadingComboBoxes, dataTable: true });\n    const query = {\n      lang: 'sql',\n      query: `SHOW TABLES IN ${accelerationFormData.dataSource}.${accelerationFormData.database}`,\n      datasource: accelerationFormData.dataSource,\n    };\n    const errorMessage = `ERROR: failed to load tables`;\n    getJobId(selectedDataConnection[0].label, query, http, (id: string) => {\n      if (id === undefined) {\n        setToast(errorMessage, 'danger');\n      } else {\n        pollQueryStatus(id, http, (data: { status: string; results: any[] }) => {\n          if (data.status === 'SUCCESS') {\n            let dataTableOptions: EuiComboBoxOptionOption<string>[] = [];\n            if (data.results.length > 0)\n              dataTableOptions = data.results.map((subArray) => ({ label: subArray[1] }));\n            setTables(dataTableOptions);\n            setLoadingComboBoxes({ ...loadingComboBoxes, dataTable: false });\n          }\n          if (data.status === 'FAILED') {\n            setLoadingComboBoxes({ ...loadingComboBoxes, dataTable: false });\n            setToast(errorMessage, 'danger');\n          }\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    loadDataSource();\n  }, []);\n\n  useEffect(() => {\n    if (accelerationFormData.dataSource !== '') {\n      loadDatabases();\n    }\n  }, [accelerationFormData.dataSource]);\n\n  useEffect(() => {\n    if (accelerationFormData.database !== '') {\n      loadTables();\n    }\n  }, [accelerationFormData.database]);\n\n  return (\n    <>\n      <EuiText data-test-subj=\"datasource-selector-header\">\n        <h3>Select data source</h3>\n      </EuiText>\n      <EuiSpacer size=\"s\" />\n      <EuiText size=\"s\" color=\"subdued\">\n        Select the data source to accelerate data from. External data sources may take time to load.\n      </EuiText>\n      <EuiSpacer size=\"s\" />\n      <EuiFormRow\n        label=\"Data source\"\n        helpText=\"A data source has to be configured and active to be able to select it and index data from.\"\n        isInvalid={hasError(accelerationFormData.formErrors, 'dataSourceError')}\n        error={accelerationFormData.formErrors.dataSourceError}\n      >\n        <EuiComboBox\n          placeholder=\"Select a data source\"\n          singleSelection={{ asPlainText: true }}\n          options={dataConnections}\n          selectedOptions={selectedDataConnection}\n          onChange={(dataConnectionOptions) => {\n            if (dataConnectionOptions.length > 0) {\n              setAccelerationFormData(\n                producer((accData) => {\n                  accData.dataSource = dataConnectionOptions[0].label;\n                  accData.formErrors.dataSourceError = validateDataSource(\n                    dataConnectionOptions[0].label\n                  );\n                })\n              );\n              setSelectedDataConnection(dataConnectionOptions);\n            }\n          }}\n          isClearable={false}\n          isInvalid={hasError(accelerationFormData.formErrors, 'dataSourceError')}\n          isLoading={loadingComboBoxes.dataSource}\n        />\n      </EuiFormRow>\n      <EuiFormRow\n        label=\"Database\"\n        helpText=\"Select the database that contains the tables you'd like to use.\"\n        isInvalid={hasError(accelerationFormData.formErrors, 'databaseError')}\n        error={accelerationFormData.formErrors.databaseError}\n      >\n        <EuiComboBox\n          placeholder=\"Select a database\"\n          singleSelection={{ asPlainText: true }}\n          options={databases}\n          selectedOptions={selectedDatabase}\n          onChange={(databaseOptions) => {\n            if (databaseOptions.length > 0) {\n              setAccelerationFormData(\n                producer((accData) => {\n                  accData.database = databaseOptions[0].label;\n                  accData.formErrors.databaseError = validateDataSource(databaseOptions[0].label);\n                })\n              );\n              setSelectedDatabase(databaseOptions);\n            }\n          }}\n          isClearable={false}\n          isInvalid={hasError(accelerationFormData.formErrors, 'databaseError')}\n          isLoading={loadingComboBoxes.database}\n        />\n      </EuiFormRow>\n      <EuiFormRow\n        label=\"Table\"\n        helpText=\"Select the Spark table that has the data you would like to index.\"\n        isInvalid={hasError(accelerationFormData.formErrors, 'dataTableError')}\n        error={accelerationFormData.formErrors.dataTableError}\n      >\n        <EuiComboBox\n          placeholder=\"Select a table\"\n          singleSelection={{ asPlainText: true }}\n          options={tables}\n          selectedOptions={selectedTable}\n          onChange={(tableOptions) => {\n            if (tableOptions.length > 0) {\n              setAccelerationFormData(\n                producer((accData) => {\n                  accData.dataTable = tableOptions[0].label;\n                  accData.formErrors.dataTableError = validateDataSource(tableOptions[0].label);\n                })\n              );\n              setSelectedTable(tableOptions);\n            }\n          }}\n          isClearable={false}\n          isInvalid={hasError(accelerationFormData.formErrors, 'dataTableError')}\n          isLoading={loadingComboBoxes.dataTable}\n        />\n      </EuiFormRow>\n    </>\n  );\n};\n","/Users/sgguruda/work/git_codebase/OpenSearch-Dashboards/plugins/dashboards-query-workbench/public/components/acceleration/selectors/index_type_selector.tsx",["62","63"],{"ruleId":"64","severity":1,"message":"65","line":51,"column":9,"nodeType":"66","messageId":"67","endLine":51,"endColumn":12,"suggestions":"68"},{"ruleId":"64","severity":1,"message":"65","line":52,"column":9,"nodeType":"66","messageId":"67","endLine":52,"endColumn":12,"suggestions":"69"},{"ruleId":"64","severity":1,"message":"65","line":62,"column":18,"nodeType":"66","messageId":"67","endLine":62,"endColumn":21,"suggestions":"70"},{"ruleId":"64","severity":1,"message":"65","line":66,"column":9,"nodeType":"66","messageId":"67","endLine":66,"endColumn":12,"suggestions":"71"},{"ruleId":"64","severity":1,"message":"65","line":86,"column":38,"nodeType":"66","messageId":"67","endLine":86,"endColumn":41,"suggestions":"72"},{"ruleId":"64","severity":1,"message":"65","line":92,"column":26,"nodeType":"66","messageId":"67","endLine":92,"endColumn":29,"suggestions":"73"},{"ruleId":"64","severity":1,"message":"65","line":131,"column":56,"nodeType":"66","messageId":"67","endLine":131,"endColumn":59,"suggestions":"74"},{"ruleId":"64","severity":1,"message":"65","line":159,"column":25,"nodeType":"66","messageId":"67","endLine":159,"endColumn":28,"suggestions":"75"},{"ruleId":"64","severity":1,"message":"65","line":184,"column":43,"nodeType":"66","messageId":"67","endLine":184,"endColumn":46,"suggestions":"76"},{"ruleId":"64","severity":1,"message":"65","line":197,"column":26,"nodeType":"66","messageId":"67","endLine":197,"endColumn":29,"suggestions":"77"},{"ruleId":"64","severity":1,"message":"65","line":208,"column":43,"nodeType":"66","messageId":"67","endLine":208,"endColumn":46,"suggestions":"78"},{"ruleId":"64","severity":1,"message":"65","line":350,"column":40,"nodeType":"66","messageId":"67","endLine":350,"endColumn":43,"suggestions":"79"},{"ruleId":"64","severity":1,"message":"65","line":393,"column":28,"nodeType":"66","messageId":"67","endLine":393,"endColumn":31,"suggestions":"80"},{"ruleId":"64","severity":1,"message":"65","line":455,"column":28,"nodeType":"66","messageId":"67","endLine":455,"endColumn":31,"suggestions":"81"},{"ruleId":"64","severity":1,"message":"65","line":521,"column":22,"nodeType":"66","messageId":"67","endLine":521,"endColumn":25,"suggestions":"82"},{"ruleId":"64","severity":1,"message":"65","line":583,"column":24,"nodeType":"66","messageId":"67","endLine":583,"endColumn":27,"suggestions":"83"},{"ruleId":"64","severity":1,"message":"65","line":607,"column":28,"nodeType":"66","messageId":"67","endLine":607,"endColumn":31,"suggestions":"84"},{"ruleId":"64","severity":1,"message":"65","line":653,"column":28,"nodeType":"66","messageId":"67","endLine":653,"endColumn":31,"suggestions":"85"},{"ruleId":"64","severity":1,"message":"65","line":687,"column":28,"nodeType":"66","messageId":"67","endLine":687,"endColumn":31,"suggestions":"86"},{"ruleId":"64","severity":1,"message":"65","line":721,"column":28,"nodeType":"66","messageId":"67","endLine":721,"endColumn":31,"suggestions":"87"},{"ruleId":"64","severity":1,"message":"65","line":755,"column":28,"nodeType":"66","messageId":"67","endLine":755,"endColumn":31,"suggestions":"88"},{"ruleId":"64","severity":1,"message":"65","line":116,"column":27,"nodeType":"66","messageId":"67","endLine":116,"endColumn":30,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":180,"column":6,"nodeType":"92","endLine":180,"endColumn":34,"suggestions":"93"},{"ruleId":"94","severity":2,"message":"95","line":29,"column":58,"nodeType":"96","messageId":"97","endLine":29,"endColumn":91,"fix":"98"},{"ruleId":"94","severity":2,"message":"95","line":31,"column":5,"nodeType":"96","messageId":"97","endLine":31,"endColumn":38,"fix":"99"},{"ruleId":"94","severity":2,"message":"95","line":33,"column":46,"nodeType":"96","messageId":"97","endLine":33,"endColumn":79,"fix":"100"},{"ruleId":"94","severity":2,"message":"95","line":34,"column":60,"nodeType":"96","messageId":"97","endLine":34,"endColumn":93,"fix":"101"},{"ruleId":"94","severity":2,"message":"95","line":35,"column":40,"nodeType":"96","messageId":"97","endLine":35,"endColumn":73,"fix":"102"},{"ruleId":"94","severity":2,"message":"95","line":36,"column":54,"nodeType":"96","messageId":"97","endLine":36,"endColumn":87,"fix":"103"},{"ruleId":"64","severity":1,"message":"65","line":51,"column":34,"nodeType":"66","messageId":"67","endLine":51,"endColumn":37,"suggestions":"104"},{"ruleId":"64","severity":1,"message":"65","line":52,"column":31,"nodeType":"66","messageId":"67","endLine":52,"endColumn":34,"suggestions":"105"},{"ruleId":"64","severity":1,"message":"65","line":74,"column":69,"nodeType":"66","messageId":"67","endLine":74,"endColumn":72,"suggestions":"106"},{"ruleId":"94","severity":2,"message":"95","line":76,"column":34,"nodeType":"96","messageId":"97","endLine":76,"endColumn":67,"fix":"107"},{"ruleId":"64","severity":1,"message":"65","line":78,"column":61,"nodeType":"66","messageId":"67","endLine":78,"endColumn":64,"suggestions":"108"},{"ruleId":"64","severity":1,"message":"65","line":103,"column":69,"nodeType":"66","messageId":"67","endLine":103,"endColumn":72,"suggestions":"109"},{"ruleId":"94","severity":2,"message":"95","line":105,"column":35,"nodeType":"96","messageId":"97","endLine":105,"endColumn":68,"fix":"110"},{"ruleId":"90","severity":1,"message":"111","line":122,"column":6,"nodeType":"92","endLine":122,"endColumn":8,"suggestions":"112"},{"ruleId":"90","severity":1,"message":"113","line":128,"column":6,"nodeType":"92","endLine":128,"endColumn":39,"suggestions":"114"},{"ruleId":"90","severity":1,"message":"115","line":134,"column":6,"nodeType":"92","endLine":134,"endColumn":37,"suggestions":"116"},{"ruleId":"64","severity":1,"message":"65","line":60,"column":71,"nodeType":"66","messageId":"67","endLine":60,"endColumn":74,"suggestions":"117"},{"ruleId":"90","severity":1,"message":"118","line":83,"column":6,"nodeType":"92","endLine":83,"endColumn":38,"suggestions":"119"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["120","121"],["122","123"],["124","125"],["126","127"],["128","129"],["130","131"],["132","133"],["134","135"],["136","137"],["138","139"],["140","141"],["142","143"],["144","145"],["146","147"],["148","149"],["150","151"],["152","153"],["154","155"],["156","157"],["158","159"],["160","161"],["162","163"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSidebarContent'. Either include it or remove the dependency array.","ArrayExpression",["164"],"@typescript-eslint/array-type","Array type using 'T[]' is forbidden for non-simple types. Use 'Array<T>' instead.","TSArrayType","errorStringGenericSimple",{"range":"165","text":"166"},{"range":"167","text":"166"},{"range":"168","text":"166"},{"range":"169","text":"166"},{"range":"170","text":"166"},{"range":"171","text":"166"},["172","173"],["174","175"],["176","177"],{"range":"178","text":"166"},["179","180"],["181","182"],{"range":"183","text":"166"},"React Hook useEffect has a missing dependency: 'loadDataSource'. Either include it or remove the dependency array.",["184"],"React Hook useEffect has a missing dependency: 'loadDatabases'. Either include it or remove the dependency array.",["185"],"React Hook useEffect has a missing dependency: 'loadTables'. Either include it or remove the dependency array.",["186"],["187","188"],"React Hook useEffect has missing dependencies: 'accelerationFormData', 'http', 'setAccelerationFormData', and 'setToast'. Either include them or remove the dependency array. If 'setAccelerationFormData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["189"],{"messageId":"190","fix":"191","desc":"192"},{"messageId":"193","fix":"194","desc":"195"},{"messageId":"190","fix":"196","desc":"192"},{"messageId":"193","fix":"197","desc":"195"},{"messageId":"190","fix":"198","desc":"192"},{"messageId":"193","fix":"199","desc":"195"},{"messageId":"190","fix":"200","desc":"192"},{"messageId":"193","fix":"201","desc":"195"},{"messageId":"190","fix":"202","desc":"192"},{"messageId":"193","fix":"203","desc":"195"},{"messageId":"190","fix":"204","desc":"192"},{"messageId":"193","fix":"205","desc":"195"},{"messageId":"190","fix":"206","desc":"192"},{"messageId":"193","fix":"207","desc":"195"},{"messageId":"190","fix":"208","desc":"192"},{"messageId":"193","fix":"209","desc":"195"},{"messageId":"190","fix":"210","desc":"192"},{"messageId":"193","fix":"211","desc":"195"},{"messageId":"190","fix":"212","desc":"192"},{"messageId":"193","fix":"213","desc":"195"},{"messageId":"190","fix":"214","desc":"192"},{"messageId":"193","fix":"215","desc":"195"},{"messageId":"190","fix":"216","desc":"192"},{"messageId":"193","fix":"217","desc":"195"},{"messageId":"190","fix":"218","desc":"192"},{"messageId":"193","fix":"219","desc":"195"},{"messageId":"190","fix":"220","desc":"192"},{"messageId":"193","fix":"221","desc":"195"},{"messageId":"190","fix":"222","desc":"192"},{"messageId":"193","fix":"223","desc":"195"},{"messageId":"190","fix":"224","desc":"192"},{"messageId":"193","fix":"225","desc":"195"},{"messageId":"190","fix":"226","desc":"192"},{"messageId":"193","fix":"227","desc":"195"},{"messageId":"190","fix":"228","desc":"192"},{"messageId":"193","fix":"229","desc":"195"},{"messageId":"190","fix":"230","desc":"192"},{"messageId":"193","fix":"231","desc":"195"},{"messageId":"190","fix":"232","desc":"192"},{"messageId":"193","fix":"233","desc":"195"},{"messageId":"190","fix":"234","desc":"192"},{"messageId":"193","fix":"235","desc":"195"},{"messageId":"190","fix":"236","desc":"192"},{"messageId":"193","fix":"237","desc":"195"},{"desc":"238","fix":"239"},[1136,1169],"Array<EuiComboBoxOptionOption<string>>",[1252,1285],[1415,1448],[1514,1547],[1593,1626],[1686,1719],{"messageId":"190","fix":"240","desc":"192"},{"messageId":"193","fix":"241","desc":"195"},{"messageId":"190","fix":"242","desc":"192"},{"messageId":"193","fix":"243","desc":"195"},{"messageId":"190","fix":"244","desc":"192"},{"messageId":"193","fix":"245","desc":"195"},[3139,3172],{"messageId":"190","fix":"246","desc":"192"},{"messageId":"193","fix":"247","desc":"195"},{"messageId":"190","fix":"248","desc":"192"},{"messageId":"193","fix":"249","desc":"195"},[4334,4367],{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"messageId":"190","fix":"256","desc":"192"},{"messageId":"193","fix":"257","desc":"195"},{"desc":"258","fix":"259"},"suggestUnknown",{"range":"260","text":"261"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"260","text":"262"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"263","text":"261"},{"range":"263","text":"262"},{"range":"264","text":"261"},{"range":"264","text":"262"},{"range":"265","text":"261"},{"range":"265","text":"262"},{"range":"266","text":"261"},{"range":"266","text":"262"},{"range":"267","text":"261"},{"range":"267","text":"262"},{"range":"268","text":"261"},{"range":"268","text":"262"},{"range":"269","text":"261"},{"range":"269","text":"262"},{"range":"270","text":"261"},{"range":"270","text":"262"},{"range":"271","text":"261"},{"range":"271","text":"262"},{"range":"272","text":"261"},{"range":"272","text":"262"},{"range":"273","text":"261"},{"range":"273","text":"262"},{"range":"274","text":"261"},{"range":"274","text":"262"},{"range":"275","text":"261"},{"range":"275","text":"262"},{"range":"276","text":"261"},{"range":"276","text":"262"},{"range":"277","text":"261"},{"range":"277","text":"262"},{"range":"278","text":"261"},{"range":"278","text":"262"},{"range":"279","text":"261"},{"range":"279","text":"262"},{"range":"280","text":"261"},{"range":"280","text":"262"},{"range":"281","text":"261"},{"range":"281","text":"262"},{"range":"282","text":"261"},{"range":"282","text":"262"},{"range":"283","text":"261"},{"range":"283","text":"262"},"Update the dependencies array to be: [selectedItems, refreshTree, getSidebarContent]",{"range":"284","text":"285"},{"range":"286","text":"261"},{"range":"286","text":"262"},{"range":"287","text":"261"},{"range":"287","text":"262"},{"range":"288","text":"261"},{"range":"288","text":"262"},{"range":"289","text":"261"},{"range":"289","text":"262"},{"range":"290","text":"261"},{"range":"290","text":"262"},"Update the dependencies array to be: [loadDataSource]",{"range":"291","text":"292"},"Update the dependencies array to be: [accelerationFormData.dataSource, loadDatabases]",{"range":"293","text":"294"},"Update the dependencies array to be: [accelerationFormData.database, loadTables]",{"range":"295","text":"296"},{"range":"297","text":"261"},{"range":"297","text":"262"},"Update the dependencies array to be: [accelerationFormData, accelerationFormData.dataTable, http, setAccelerationFormData, setToast]",{"range":"298","text":"299"},[1392,1395],"unknown","never",[1405,1408],[1564,1567],[1612,1615],[1950,1953],[2034,2037],[3204,3207],[4264,4267],[5089,5092],[5466,5469],[5859,5862],[9646,9649],[11214,11217],[13377,13380],[15755,15758],[17647,17650],[18377,18380],[19830,19833],[20877,20880],[21937,21940],[22997,23000],[3446,3449],[5480,5508],"[selectedItems, refreshTree, getSidebarContent]",[2144,2147],[2231,2234],[3049,3052],[3280,3283],[4243,4246],[4896,4898],"[loadDataSource]",[5006,5039],"[accelerationFormData.dataSource, loadDatabases]",[5142,5173],"[accelerationFormData.database, loadTables]",[1976,1979],[2713,2745],"[accelerationFormData, accelerationFormData.dataTable, http, setAccelerationFormData, setToast]"]